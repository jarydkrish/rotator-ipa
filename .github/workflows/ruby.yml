# Runs our test suite via Github Actions

name: Ruby

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:15
        ports: ['5432:5432']
        env:
          POSTGRES_PASSWORD: postgres
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
    - uses: actions/checkout@v2
    - name: Set up Ruby
      uses: ruby/setup-ruby@v1
      with:
        bundler-cache: true
    # Node and Yarn Deps
    - uses: actions/setup-node@v3
      with:
        node-version: 18.x
        cache: 'yarn'
    - name: Yarn install
      run: |
        yarn install --pure-lockfile
    # Test setup
    - name: Setup database
      env:
        DATABASE_URL: postgres://postgres:postgres@127.0.0.1:5432/rotator_ipa_test
        RAILS_ENV: test
      run: |
        bundle exec rails db:setup
        bundle exec rails db:migrate
    - name: Setup assets cache
      uses: actions/cache@v3
      with:
        path: |
          public/packs-test
          public/assets
          tmp/cache/assets
        key: ${{ runner.os }}-assets
        restore-keys: |
          ${{ runner.os }}-assets
    - name: Setup assets
      env:
        RAILS_ENV: test
      run: |
        bundle exec rails assets:precompile assets:clean
    # Actually run all the tests
    - name: Run tests
      env:
        DATABASE_URL: postgres://postgres:postgres@127.0.0.1:5432/rotator_ipa_test
        RAILS_ENV: test
        CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
      run: bundle exec rails test
  lint:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Set up Ruby
      uses: ruby/setup-ruby@v1
      with:
        bundler-cache: true
    - name: Run linter
      run: bundle exec rubocop
