type Beer implements Node {
  bottleDate: ISO8601Date
  createdAt: ISO8601DateTime!
  description: String
  id: ID!
  kind: String
  name: String
  readyDate: ISO8601Date
  recipeUrl: String!
  startDate: ISO8601Date
  updatedAt: ISO8601DateTime!
}

"""
The connection type for Beer.
"""
type BeerConnection {
  """
  A list of edges.
  """
  edges: [BeerEdge]

  """
  A list of nodes.
  """
  nodes: [Beer]

  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
}

"""
An edge in a connection.
"""
type BeerEdge {
  """
  A cursor for use in pagination.
  """
  cursor: String!

  """
  The item at the end of the edge.
  """
  node: Beer
}

"""
An ISO 8601-encoded date
"""
scalar ISO8601Date

"""
An ISO 8601-encoded datetime
"""
scalar ISO8601DateTime

type Mutation {
  """
  An example field added by the generator
  """
  testField: String!
}

"""
An object with an ID.
"""
interface Node {
  """
  ID of the object.
  """
  id: ID!
}

"""
Information about pagination in a connection.
"""
type PageInfo {
  """
  When paginating forwards, the cursor to continue.
  """
  endCursor: String

  """
  When paginating forwards, are there more items?
  """
  hasNextPage: Boolean!

  """
  When paginating backwards, are there more items?
  """
  hasPreviousPage: Boolean!

  """
  When paginating backwards, the cursor to continue.
  """
  startCursor: String
}

type Query {
  """
  Beers being brewed
  """
  beers(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: String

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the last _n_ elements from the list.
    """
    last: Int
  ): BeerConnection!

  """
  Fetches an object given its ID.
  """
  node(
    """
    ID of the object.
    """
    id: ID!
  ): Node

  """
  Fetches a list of objects given a list of IDs.
  """
  nodes(
    """
    IDs of the objects.
    """
    ids: [ID!]!
  ): [Node]!
}